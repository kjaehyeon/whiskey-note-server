buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.6.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        //for sonarqube
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
    }
}

subprojects { //공통 적용
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    //for test coverage
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    test {
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        dependsOn test
        reports {
            html.enabled true
            xml.enabled true
            csv.enabled true
        }
    }
    sonarqube {
        properties {
            property "sonar.host.url", "http://localhost:9000"
            property "sonar.login", "933aebaf8c35e2c4a7175b61012f4f2ea0e544ea"
            property "sonar.sources", "src"
            property "sonar.language", "java"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.profile", "My quality gate"
            property "sonar.test.inclusions", "**/*Test.java"
            property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        }
    }

    group = 'com.example.springpracticecalendar'
    version = '0.0.2-SNAPSHOT'
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    task prepareKotlinBuildScriptModel {
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }

    test {
        useJUnitPlatform()
    }
}
project(':whiskey-note-core'){
    bootJar { enabled = false }
    jar { enabled = true }
}

project(':whiskey-note-api'){
    bootJar { enabled = true }
    jar { enabled = true }
    dependencies {
        api project(':whiskey-note-core')
    }
}
